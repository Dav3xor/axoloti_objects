<objdefs appVersion="1.0.12">
   <obj.normal id="2ddrum" uuid="deadbeff-288e-4049-9f91-deadbeff3349">
      <sDescription>2d drum, takes 4 piezo inputs, make&apos;s a position sensitive drum input</sDescription>
      <author>dvxr</author>
      <license>GPL</license>
      <helpPatch>2ddrum.axh</helpPatch>
      <inlets>
         <frac32 name="ul"/>
         <frac32 name="ur"/>
         <frac32 name="ll"/>
         <frac32 name="lower_right"/>
      </inlets>
      <outlets>
         <frac32 name="xpos"/>
         <frac32 name="ypos"/>
         <frac32 name="level"/>
         <bool32 name="trigger"/>
      </outlets>
      <displays/>
      <params/>
      <attribs/>
      <code.declaration><![CDATA[//inlet_upper_left
//inlet_upper_right
//inlet_lower_left
//inlet_lower_right

//outlet_xpos
//outlet_ypos
//outlet_level
//outlet_trigger

class FIR
{
	public:
		FIR() {
			pos = 0;
			int i;
			for(i=0;i<16;i++){
				buffer[i]=0;
			}
		}
		void add_val(int32_t newval) {
			buffer[pos] = newval;
			pos = (pos + 1) % 16;
		}
		int32_t cur_val(void) {
			uint32_t i;
			uint64_t sum = 0;
			for(i = 0; i < 16; i++) {
				sum += buffer[i];
			}
			return (sum/16);
		}
	private:
	     uint32_t pos;
		int32_t buffer[16];
			
};

FIR ul;
FIR ur;
FIR ll;
FIR lr;]]></code.declaration>
      <code.krate><![CDATA[ul.add_val(inlet_ul);
outlet_level = ul.cur_val();]]></code.krate>
   </obj.normal>
</objdefs>